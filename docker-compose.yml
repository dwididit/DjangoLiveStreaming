version: '3.8'

services:
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE: postgres
      SQL_HOST: ${SQL_HOST}
      SQL_PORT: ${SQL_PORT}
      SQL_DATABASE: ${POSTGRES_DB}
      SQL_USER: ${POSTGRES_USER}
      SQL_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      MAIL_FROM_EMAIL: ${MAIL_FROM_EMAIL}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A DjangoLiveStreaming worker --loglevel=info
    environment:
      DATABASE: postgres
      SQL_HOST: ${SQL_HOST}
      SQL_PORT: ${SQL_PORT}
      SQL_DATABASE: ${POSTGRES_DB}
      SQL_USER: ${POSTGRES_USER}
      SQL_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A DjangoLiveStreaming beat --loglevel=info
    environment:
      DATABASE: postgres
      SQL_HOST: ${SQL_HOST}
      SQL_PORT: ${SQL_PORT}
      SQL_DATABASE: ${POSTGRES_DB}
      SQL_USER: ${POSTGRES_USER}
      SQL_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
  static_volume:
